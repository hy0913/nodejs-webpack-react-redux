import React, { Component } from 'react'
import ReactEcharts from 'echarts-for-react'
import NProgress from 'nprogress'
import { DatePicker, Select, Input , Button , Table } from 'antd'
import './china'
import moment from 'moment';
const { MonthPicker, RangePicker } = DatePicker;
const dateFormat = 'YYYY/MM/DD'
const monthFormat = 'YYYY/MM'
const Option = Select.Option
import './RegionView.scss'
const columns = [{
  title: '排名',
  dataIndex: 'v1'
}, {
  title: '省份',
  dataIndex: 'v2'
},{
  title: '占比',
  dataIndex: 'v3'
},{
  title: '用户数量',
  dataIndex: 'v4'
}];
const columns1 = [{
  title: '排名',
  dataIndex: 'v1'
}, {
  title: '国家',
  dataIndex: 'v2'
},{
  title: '占比',
  dataIndex: 'v3'
},{
  title: '用户数量',
  dataIndex: 'v4'
}];
const data = [{
  v1: '1',
  v2: '广东省',
  v3: '30%',
  v4:'100'
},{
  v1: '2',
  v2: '汉东省',
  v3: '20%',
  v4:'100'
},{
  v1: '1',
  v2: '广东省',
  v3: '30%',
  v4:'100'
},{
  v1: '2',
  v2: '汉东省',
  v3: '20%',
  v4:'100'
}];
const data1 = [{
  v1: '1',
  v2: '中国',
  v3: '30%',
  v4:'100'
},{
  v1: '2',
  v2: '日本',
  v3: '20%',
  v4:'100'
}];
const option = {
    title: {
        text: 'iphone销量',
        left: 'center'
    },
    legend: {
        orient: 'vertical',
        left: 'left',
        data:['iphone3']
    },
    visualMap: {
        min: 0,
        max: 2500,
        left: 'left',
        top: 'bottom',
        text: ['高','低'],           // 文本，默认为数值文本
        calculable: true
    },
    series: [
        {
            name: 'iphone3',
            type: 'map',
            mapType: 'china',
            roam: false,
            label: {
                normal: {
                    show: true
                },
                emphasis: {
                    show: true
                }
            },
            data:[
                {name: '北京',value:  Math.round(Math.random()*1000) },
                {name: '天津',value:  Math.round(Math.random()*1000) },
                {name: '上海',value:  Math.round(Math.random()*1000) },
                {name: '重庆',value:  Math.round(Math.random()*1000) },
                {name: '河北',value:  Math.round(Math.random()*1000) },
                {name: '河南',value:  Math.round(Math.random()*1000) },
                {name: '云南',value:  Math.round(Math.random()*1000) },
                {name: '辽宁',value:  Math.round(Math.random()*1000) },
                {name: '黑龙江',value:  Math.round(Math.random()*1000) },
                {name: '湖南',value:  Math.round(Math.random()*1000) },
                {name: '安徽',value:  Math.round(Math.random()*1000) },
                {name: '山东',value:  Math.round(Math.random()*1000) },
                {name: '新疆',value:  Math.round(Math.random()*1000) },
                {name: '江苏',value:  Math.round(Math.random()*1000) },
                {name: '浙江',value:  Math.round(Math.random()*1000) },
                {name: '江西',value:  Math.round(Math.random()*1000) },
                {name: '湖北',value:  Math.round(Math.random()*1000) },
                {name: '广西',value:  Math.round(Math.random()*1000) },
                {name: '甘肃',value:  Math.round(Math.random()*1000) },
                {name: '山西',value:  Math.round(Math.random()*1000) },
                {name: '内蒙古',value:  Math.round(Math.random()*1000) },
                {name: '陕西',value:  Math.round(Math.random()*1000) },
                {name: '吉林',value:  Math.round(Math.random()*1000) },
                {name: '福建',value:  Math.round(Math.random()*1000) },
                {name: '贵州',value:  Math.round(Math.random()*1000) },
                {name: '广东',value:  Math.round(Math.random()*1000) },
                {name: '青海',value:  Math.round(Math.random()*1000) },
                {name: '西藏',value:  Math.round(Math.random()*1000) },
                {name: '四川',value:  Math.round(Math.random()*1000) },
                {name: '宁夏',value:  Math.round(Math.random()*1000) },
                {name: '海南',value:  Math.round(Math.random()*1000) },
                {name: '台湾',value:  Math.round(Math.random()*1000) },
                {name: '香港',value:  Math.round(Math.random()*1000) },
                {name: '澳门',value:  Math.round(Math.random()*1000) }
            ]
        }
    ]
};
export default class RegionView extends Component{
  constructor(props){
    super(props)
    this.state = {
        platform: '1',
        appkey: 'sads213',
        dateTime: '20170425',
        appVersion: '1.1',
        interfaceName: 'startTimes',
        eventIdentifier: 'AppStart'
    }
  }
  handleClick(e) {
    const childs = e.currentTarget.parentNode.childNodes
    for(let i = 0; i < childs.length; i++){
      childs[i].classList.remove('active')
    }
    e.currentTarget.classList.add('active')
    const { region } = this.props
        NProgress.start()
        region(this.state, () => {
          NProgress.done()
          message.info('请求发送成功')
        }, () => {
          NProgress.done()
          message.info('请求发送失败')
    })
  }
	render(){
		return(
				<div className="reg">
					<div className="top">
						<div className="vera verw">
							<h4>地域分布</h4>
						</div>
            <div className="verc verw">
              <Select defaultValue="全部版本" style={{ width: 120 }}>
                  <Option value="6.7">6.7</Option>
                  <Option value="6.8">6.8</Option>
                </Select>
            </div>
						<div className="verb verw">
						    <DatePicker defaultValue={moment('2015/01/01', dateFormat)} format={dateFormat} />					    							  
						</div>
					
					</div>
					<div className="mid">
						<div className="row1">
							<ul>
								<li style={{width:"12.5%"}} className="active" onClick={ e => this.handleClick(e)}>活跃用户</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>新增用户</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>升级用户</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>登录会员</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>新登录会员</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>新注册会员</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>人均启动次数</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>次均使用时长</li>
							</ul>
						</div>
						<div className="row3">
							<ReactEcharts
	                        option={option}
	                        style={{height: '380px', width: '100%'}} 
	                        className='react_for_echarts' />
						</div>
					</div>
					<div className="bottom">
						<div className="row1">
							<div className="l1">省份分布</div>
							<div className="l3">
								<Button>导出</Button>
							</div>
						</div>
						<div className="row2">
							<Table columns={columns} dataSource={data} onChange={this.onChange} />
						</div>
					</div>
					<div className="mid">
						<div className="row1">
							<ul>
								<li style={{width:"12.5%"}} className="active" onClick={ e => this.handleClick(e)}>活跃用户</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>新增用户</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>升级用户</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>登录会员</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>新登录会员</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>新注册会员</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>人均启动次数</li>
								<li style={{width:"12.5%"}} onClick={ e => this.handleClick(e)}>次均使用时长</li>
							</ul>
						</div>
					</div>
					<div className="bottomb">
						<div className="row1">
							<div className="l1">TOP 10 国家（地区）分布</div>
							<div className="l3">
								<Button>导出</Button>
							</div>
						</div>
						<div className="row2">
							<Table columns={columns1} pagination={false} dataSource={data1} onChange={this.onChange} />
						</div>
					</div>
				</div>
			)
	}
}