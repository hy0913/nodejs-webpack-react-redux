import React, { Component } from 'react'
import './timeAnalysis.scss'
import { Button, Icon, Select, Tooltip, DatePicker, Table } from 'antd'
import moment from 'moment';
import ReactEcharts from 'echarts-for-react'
import { getOption4 } from '../../option/todayDetails'
const { Option } = Select;
const data = [{
		  key: '1',
		  date: '2017-04-26',
		  activeUser: '43',
		  addUser: '0',
		  upUser: '0',
		  loginVip: '0',
		  newLoginVip: '0',
		  newRegVip: '0',
		  startUpAccount: '1.74',
		  userTime: '28.34'
		}, {
		  key: '2',
		  date: '2017-04-25',
		  activeUser: '42',
		  addUser: '0',
		  upUser: '0',
		  loginVip: '0',
		  newLoginVip: '0',
		  newRegVip: '0',
		  startUpAccount: '1.74',
		  userTime: '28.34'
		}, {
		  key: '3',
		  date: '2017-04-24',
		  activeUser: '41',
		  addUser: '0',
		  upUser: '0',
		  loginVip: '0',
		  newLoginVip: '0',
		  newRegVip: '0',
		  startUpAccount: '1.74',
		  userTime: '28.34'
		}, {
		  key: '4',
		  date: '2017-04-23',
		  activeUser: '40',
		  addUser: '0',
		  upUser: '0',
		  loginVip: '0',
		  newLoginVip: '0',
		  newRegVip: '0',
		  startUpAccount: '1.74',
		  userTime: '28.34'
		}, {
		  key: '5',
		  date: '2017-04-22',
		  activeUser: '45',
		  addUser: '0',
		  upUser: '0',
		  loginVip: '0',
		  newLoginVip: '0',
		  newRegVip: '0',
		  startUpAccount: '1.74',
		  userTime: '28.34'
		}];

export default class TimeAnalysis extends Component {
	constructor(props){
		super(props)
		this.state = {}
	}
	handleClick(e) {
		const childs = e.currentTarget.parentNode.parentNode.childNodes
		for(let i = 0; i < childs.length; i++){
			childs[i].classList.remove('active')
		}
		e.currentTarget.parentNode.classList.add('active')
	}
	handleChange(pagination, filters, sorter) {
  	  console.log('Various parameters', pagination, sorter);
  	}
	render() {
		const columns = [{
    	  title: '时间',
    	  dataIndex: 'date',
    	  sorter: (a, b) => a.date - b.date
    	}, {
    	  title: '活跃用户',
    	  dataIndex: 'activeUser',
    	  sorter: (a, b) => a.activeUser - b.activeUser
    	}, {
    	  title: '新增用户',
    	  dataIndex: 'addUser',
    	  sorter: (a, b) => a.addUser - b.addUser
    	},{
    	  title: '升级用户',
    	  dataIndex: 'upUser',
    	  sorter: (a, b) => a.upUser - b.upUser
    	},{
    	  title: '登录会员',
    	  dataIndex: 'loginVip',
    	  sorter: (a, b) => a.loginVip - b.loginVip
    	},{
    	  title: '新登录会员',
    	  dataIndex: 'newLoginVip',
    	  sorter: (a, b) => a.newLoginVip - b.newLoginVip
    	},{
    	  title: '新注册会员',
    	  dataIndex: 'newRegVip',
    	  sorter: (a, b) => a.newRegVip - b.newRegVip
    	},{
    	  title: '人均启动次数',
    	  dataIndex: 'startUpAccount',
    	  sorter: (a, b) => a.startUpAccount - b.startUpAccount
    	},{
    	  title: '次均使用时长(秒)',
    	  dataIndex: 'userTime',
    	  sorter: (a, b) => a.userTime - b.userTime
    	}];
		return (
			<div className="timeAnalysis">
				<div className="row1">
					<div>
						<h5 className="title">
							时段分析
							<Tooltip placement="right" title="时段分析">
        						<Icon type="question-circle" />
      						</Tooltip>
						</h5>
						<div>
							<Select
    						showSearch
    						style={{ width: 150, float: 'right' }}
    						defaultValue="all"
  							>
    							<Option value="all">全部版本</Option>
    							<Option value="6.8">6.8</Option>
    							<Option value="6.7">6.7</Option>
  							</Select>
						</div>
  						<div>
  							<DatePicker size="default" defaultValue={moment('2017-4-26', 'YYYY-MM-DD')} />
  						</div>
					</div>
				</div>
				<div className="row2">
					<ul className="nav">
						<li className="active">
							<a className="fz12" onClick={e => this.handleClick(e)}>活跃用户</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>新增用户</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>升级用户</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>登录会员</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>新登录会员</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>新注册会员</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>人均启动次数</a>
						</li>
						<li>
							<a className="fz12" onClick={e => this.handleClick(e)}>次均使用时长(秒)</a>
						</li>
					</ul>
				</div>
				<div className="row3">
					<div>
						<h6 className="fz14">24小时趋势</h6>
						<div>
							<h6 className="fz14">对比：</h6>
							<DatePicker size="default" defaultValue={moment('2017-04-19', 'YYYY-MM-DD')} />
						</div>
						<ReactEcharts
                        	option={getOption4()} 
                        	style={{height: '450px', width: '100%'}} 
                        	className='react_for_echarts' 
                        />
					</div>
				</div>
				<div className="row4">
					<div className="tableTitle">
						<div className="tableTitleText">数据表</div>
						<div className="rightBtn">
							<Button>导出</Button>
						</div>
					</div>
					<Table
    					columns={columns}
    					dataSource={data}
    					className="tableContent"
    					onChange={this.handleChange}
 					/>
				</div>
			</div>
		)
	}
}