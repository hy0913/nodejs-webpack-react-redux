import React, {Component} from 'react'
import './main.scss'

const getTime = (time) => {
  let currentDate = new Date()
  let endTime = currentDate.getTime()
  currentDate.setHours(0)
  currentDate.setMinutes(0)
  currentDate.setSeconds(0)
  currentDate.setMilliseconds(0)
  let dayStartTime = currentDate.getTime()
  let week = currentDate.getDay()
  let millisecond = 1000 * 60 * 60 * 24
  let minusDay = week !== 0 ? week - 1 : 6
  let monday = new Date(currentDate.getTime() - (minusDay * millisecond))
  let weekStartTime = monday.getTime()
  let currentMonth = currentDate.getMonth()
  let currentYear = currentDate.getFullYear()
  let monthFir = new Date(currentYear, currentMonth, 1, 0, 0, 0)
  let monthStartTime = monthFir.getTime()

  switch (time) {
    case 'day':
      return {
        ec_ranges_start: dayStartTime,
        ec_ranges_end: endTime
      }
    case 'week':
      return {
        ec_ranges_start: weekStartTime,
        ec_ranges_end: endTime
      }
    case 'month':
      return {
        ec_ranges_start: monthStartTime,
        ec_ranges_end: endTime
      }
  }
}

const TabItem = ({text, mark, style, click}) => {
  const handleClick = (e) => {
    e.preventDefault()
    const childs = e.currentTarget.parentNode.childNodes
    for (let i = 0; i < childs.length; i++) {
      childs[i].classList.remove('active')
    }
    e.currentTarget.classList.add('active')

    let time = {}
    switch (mark) {
      case 'net-day':
        time = getTime('day')
        break
      case 'net-week':
        time = getTime('week')
        break
      case 'net-month':
        time = getTime('month')
        break
    }
    click(time)
  }
  return (<a href="#" onClick={handleClick} className={style}>{text}</a>)
}

const TabBar = ({tabInfo, click}) => {
    let test = tabInfo
    // 用于存放菜单选项
    let tabs = []

    for (let i=0; i<test.length; i++) {
        if (i === 0) {
            tabs.push(<TabItem key={i} click={click} mark={test[i].mark} text={test[i].text} style="active" />)
        } else if (i === test.length - 1) {
            tabs.push(<TabItem key={i} click={click} mark={test[i].mark} text={test[i].text} style="last" />)
        } else {
            tabs.push(<TabItem key={i} click={click} mark={test[i].mark} text={test[i].text} />)
        }
    }

    return (
        <div className="tab-bar">
            <div className="tabs">
                {tabs}
            </div>
            <div className="line"></div>
        </div>
    )
}

class ImgTab extends Component {

    render() {
        const { tabInfo, click } = this.props

        return (
            <TabBar tabInfo={tabInfo} click={click}/>
        )
    }
}

export default ImgTab